name: Backend CI

on: 
  push:
    branches: ["main"]  

env:
  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
  MONGODB_URI: ${{secrets.MONGODB_URI}}

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./Backend  # ðŸ”¹ Cambiado a la ruta correcta (/backend)
        run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build server
        working-directory: ./Backend  # ðŸ”¹ Cambiado a la ruta correcta (/backend)
        run: npm run build

  start:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./Backend  # ðŸ”¹ Cambiado a la ruta correcta (/backend)

      - name: Start server
        working-directory: ./Backend  # ðŸ”¹ Cambiado a la ruta correcta (/backend)
        run: npm run start

  test:
    runs-on: ubuntu-latest
    needs: start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run tests
        working-directory: ./Backend  # ðŸ”¹ Cambiado a la ruta correcta (/backend)
        run: npm test -- --coverage

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: /backend/coverage
